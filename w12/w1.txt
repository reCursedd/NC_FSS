-----| pg5 |-----------------------
# Multiline statements
# pass

-----| pg6 |-----------------------
# Importing Modules
# pass

-----| pg7 |-----------------------
# Arithmetic - python division
# pass

-----| pg8 |-----------------------
# Python functions are first-class
# pass

-----| pg9 |-----------------------
# Python uses single backlashes to encode special char
# pass

-----| pg10 |-----------------------
# Using exceptions for Error handling
# pass

-----| pg11 |-----------------------
# Checking 'in' operator
# pass

-----| pg12 |-----------------------
# Unpacking list
# pass

-----| pg13 |-----------------------
# Tuples are immutable
# pass

-----| pg14 |-----------------------
# Dictionaries
# pass

-----| pg15 |-----------------------
# defaultdict usage
# pass

-----| pg16 |-----------------------
# Counter
# pass

-----| pg17 |-----------------------
# Sets for finding distinct elements
# pass

-----| pg18 |-----------------------
# Testing python loops
# pass

-----| pg19 |-----------------------
# Boolean check
# pass

-----| pg20 |-----------------------
# All function test
# pass

-----| pg22 |-----------------------
# Sorting check and also the sequence matters in list unlike sets
# pass

-----| pg23 |-----------------------
# Pythonic way of transforming lists: List Comprehensions
# pass

-----| pg24 |-----------------------
# Lazy Dictionary access using Iterators
# pass

-----| pg25 |-----------------------
# Randomness
# pass

-----| pg26 |-----------------------
# Regular Expressions
# pass

-----| pg27 |-----------------------
# OOP: Asserting that each object has separate init called
# pass

-----| pg28 |-----------------------
# Partial and map function
# pass

-----| pg29 |-----------------------
# Reduce implementation?
# pass

-----| pg30 |-----------------------
# Enumerate
# pass

-----| pg31 |-----------------------
# Zip
# pass

-----| pg32 |-----------------------
# Testing agrs
# pass

-----| pg33 |-----------------------
# Arbitrary arguments to higher order function
# pass

# pass= 28 fail= 0 %pass = 100%


